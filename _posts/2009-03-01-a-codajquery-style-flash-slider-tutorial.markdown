--- 
date: 2009-03-01 21:36:38 +0000
layout: post
title: A Coda/JQuery style Flash slider tutorial
wordpress_id: 248
wordpress_url: http://www.olliekav.com/?p=248
categories: 
  title: Flex/Flash
  slug: flexflash
  autoslug: flex/flash
---
A good sign to write a quick tutorial is when you couldn't find anything in a couple of Google searches for the problem you where trying to solve. <!--more-->
For a recent design I have been working on (see below) I had to create a [Coda](http://www.panic.com/coda/)/[JQuery](http://www.ndoherty.com/demos/coda-slider/1.1.1/) style sliding panel to display extended  information on the homepage, the one caveat being it needed to be in Flash so I could animate the chatacters and the text on each slide. No problem I thought, that was pretty easy to in ActionScript 2, but I have been polishing up on my ActionScript3 at the moment whilst doing some flex work so what better time to write something from scratch.

[You can download the full source code for this here.](http://www.olliekav.com/examples/flash-slider.zip)
![flash tutorial](http://www.olliekav.com/wp-content/uploads/2009/03/likis.gif "flash tutorial")
We are going to nest 4 movie clips within a container movie clip, we then use this container to reference for the sliding action. So firstly create the four individual movie clips on Layer One and give each one an instance name (this is very important to reference in the actionscript). I have named them 'movieClipOne' etc all the way up to 4. Line these up side by side on the stage with the furthest left box sitting in the document window. Then create a move clip from all four and give this an instance name of 'container'. Now you should have five movie clips in total in your library.
![flash tutorial](http://www.olliekav.com/wp-content/uploads/2009/03/flash2.gif "flash tutorial")
The next stage is to create a mask so we can only see one of the clips at a time, create a second layer, draw a square over the first movie clip that is the size of the document window, right click on this layer and choose mask. Now only one of the movie clips will be visible on the stage.
![flash tutorial](http://www.olliekav.com/wp-content/uploads/2009/03/flash3.gif "flash tutorial")
Next create a third layer, here we will create our buttons to tie the actionscript to. Create a next and previous button and add these to the stage as shown in the screenshot. Now we have the basis for the sliding action we can move on to add the actionscript.
![flash tutorial](http://www.olliekav.com/wp-content/uploads/2009/03/flash4.gif "flash tutorial")
We are going to add event listeners to our buttons that will execute a function to tell the 'container' to slide along the x axis the amount of the child movie clip. Event listeners (also called event handlers) are functions that Flash player will execute in response to specific events that we set. We will also use the Flash 'tween' class to slide the content rather than just jump.

Add another layer to your flash document, we will use this for the actionscript. To start with add two event listeners, as shown below, plus two empty functions. This will be an event of type MOUSE_EVENT, that on mouse click will then execute the function for the previous and next slide.
``nextButton.addEventListener(MouseEvent.CLICK, rightSlideHandler);prevButton.addEventListener(MouseEvent.CLICK, leftSlideHandler);function rightSlideHandler(myEvent:MouseEvent):void {}function leftSlideHandler(myEvent:MouseEvent):void {}``
The next step is to create some variables to use within our functions, we need to calculate the width of the 'container' movie clip, then divide this by 4 to get the width of each movie clip, then set a variable of how much the slide should be, so...
``var holder = container.width;var movieClipWidth = (holder/4);var movieClipMove = -1*boxPrev;``
Now we can start to write our functions, the first thing we need to do here is import the flash tween classes to slide the movie clip, so add these at the top of your actions window...
``import fl.transitions.Tween;import fl.transitions.TweenEvent;import fl.transitions.easing.*;``
Then in the functions we can now create the tweens, we have also created another variable for the 'container' movie clip current 'x' position, the we can use this in the tween to calculate the distance to move. Also as a future proof feature we create another function that disables the current button whilst the tween is running to stop people multiple clicking on the buttons.
``function rightSlideHandler(myEvent:MouseEvent):void {var movieClipCurrent = container.x;var myTweenNext:Tween = new Tween(classroom_Holder,"x",Regular.easeInOut,container.x,movieClipCurrent + movieClipMove,1,true);myTweenNext.addEventListener(TweenEvent.MOTION_FINISH, onComplete);}function leftSlideHandler(myEvent:MouseEvent):void{var movieClipCurrent = classroom_Holder.x;var myTweenPrev:Tween = new Tween(classroom_Holder,"x",Regular.easeInOut,container.x,movieClipCurrent + movieClipWidth,1,true);myTweenPrev.addEventListener(TweenEvent.MOTION_FINISH, onComplete);}function onComplete(evt : TweenEvent):void {nextButton.addEventListener(MouseEvent.CLICK, rightSlideHandler);prevButton.addEventListener(MouseEvent.CLICK, leftSlideHandler);}``
This now gives us the basic functionality to slide our panels, so now if you test your flash movie you should be able to slide the 'container' movie clip back and forward the width of the child clips! Horray! But, there are still some small improvements we can make to improve the usability. We really don't want to show the buttons when you hit the end of the movie, otherwise the user will think there is more content. So on initial load of the movie we hide the 'Previous button'.
``prevButton.visible = false;``
This sits outside the main functions, but we also need to create 'if' statements within our right and left functions to remove the buttons once an event has occurred. Within the 'nextButton' function we would add...
``prevButton.visible = true; if (container.x < movieClipMove) {nextButton.visible = false;}``
This tells the previous button to be visible as soon as the next button is clicked, and also to remove the next button from the stage if the containers x position is less than the value of the variable 'movieClipMove'. We then have to reverse this for the previous button function.
``nextButton.visible = true;if (container.x > movieClipMove) {prevButton.visible = false;}``So now your full actionscript code should be the following, and the sliding should work like a charm! Here is an example.[kml_flashembed fversion="8.0.0" replaceId="slidingFlash" movie="http://www.olliekav.com/wp-content/uploads/swf/slider/slidingPanels.swf" targetclass="flashmovie" useexpressinstall="true" publishmethod="dynamic" width="540" height="395"]
[![Get Adobe Flash player](http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif)](http://adobe.com/go/getflashplayer)
[/kml_flashembed]``//Import the sliding classesimport fl.transitions.Tween;import fl.transitions.TweenEvent;import fl.transitions.easing.*;//Set up our initial variablesvar holder = container.width;var movieClipWidth = (holder/4);var movieClipMove = -1*movieClipWidth;//Hide the previous button on first loadprevButton.visible = false;//Set up our functionsnextButton.addEventListener(MouseEvent.CLICK, rightSlideHandler);prevButton.addEventListener(MouseEvent.CLICK, leftSlideHandler);function rightSlideHandler(myEvent:MouseEvent):void {var movieClipCurrent = container.x;var myTweenNext:Tween = new Tween(container,"x",Regular.easeInOut,container.x,movieClipCurrent + movieClipMove,1,true);myTweenNext.addEventListener(TweenEvent.MOTION_FINISH, onComplete);prevButton.visible = true;if (container.x < movieClipMove) {nextButton.visible = false;}}function leftSlideHandler(myEvent:MouseEvent):void{var movieClipCurrent = container.x;var myTweenPrev:Tween = new Tween(container,"x",Regular.easeInOut,container.x,movieClipCurrent + movieClipWidth,1,true);myTweenPrev.addEventListener(TweenEvent.MOTION_FINISH, onComplete);nextButton.visible = true;if (container.x > movieClipMove) {prevButton.visible = false;}}function onComplete(evt : TweenEvent):void {nextButton.addEventListener(MouseEvent.CLICK, rightSlideHandler);prevButton.addEventListener(MouseEvent.CLICK, leftSlideHandler);}``[You can download the full source code for this here](http://www.olliekav.com/examples/flash-slider.zip) to make the above a bit more clear. Enjoy.
