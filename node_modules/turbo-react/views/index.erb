<!DOCTYPE html>

<html>
  <head>
    <title>Reactize :: Transition between static HTML pages; no server required</title>
    <link rel="author" href="https://twitter.com/ssorallen">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css" media="screen">
    <link rel="stylesheet" href="/reactize.css" media="screen">
    <script src="/dist/reactize.min.js"></script>
  </head>
  <body>
    <div class="container">
      <div class="row">
        <div class="col-md-6 col-md-offset-3">
          <h1>Reactize</h1>
          <p class="lead">
            This is a mix of <a href="http://facebook.github.io/react/">React</a>,
            React's <a href="http://facebook.github.io/react/docs/jsx-in-depth.html">JSX</a>,
            and <a href="https://github.com/rails/turbolinks/">Turbolinks</a> that
            applies DOM "diffs" without any server configuration&mdash;it
            just needs plain old HTML.
          </p>
          <div class="panel <%= @panel_class %>">
            <div class="panel-heading">
              The Panel of Diff
            </div>
            <div class="panel-body">
              The panel's class this time is <code><%= @panel_class %></code>.
            </div>
          </div>
          <div class="progress progress-striped active">
            <div class="progress-bar progress-bar-success width<%= rand(21) * 5 %>"></div>
          </div>
          <p><a class="btn btn-primary" href="/">Re-request this page</a></p>
          <p class="text-muted" title="<%= @request_time.to_s %>">
            Requested at <%= @request_time.strftime("%Y-%m-%d %H:%M:%S") %>
          </p>

          <h3>What it's doing</h3>
          <p>"Re-request this page" is just a link to the current page. When you
            click it, Turbolinks intercepts the GET request and fetchs the
            full page via XHR.</p>
          <p>The panel is rendered with a random <code>panel-</code> class on each
            request, and the progress bar gets a random <code>widthX</code>
            class.</p>
          <p>With Turbolinks alone, the entire <code>&lt;body&gt;</code> would be
            replaced, and transitions would not happen. In this little demo
            though, React adds and removes classes and text, and the attribute
            changes are animated with CSS transitions. The DOM is otherwise
            left in tact.</p>

          <h3>The Code</h3>
          <p>
            Reactize turns the <code>&lt;body&gt;</code> into a React
            element: <a href="https://github.com/ssorallen/turbo-react/blob/master/src/reactize.js">reactize.js</a>
          </p>
          <p>
            Reactize is hooked into
            Turbolinks: <a href="https://github.com/ssorallen/turbo-react/blob/master/src/reactize.js#L32">reactize.js#32</a>
          </p>
          <p>
            This whole app is on
            GitHub: <a href="https://github.com/ssorallen/turbo-react/">turbo-react</a>
          </p>

          <h3>Feedback</h3>
          <p>Tweet at
            me: <a href="https://twitter.com/ssorallen?rel=author">@ssorallen</a>
          </p>
        </div>
      </div>
    </div>
  </body>
</html>
